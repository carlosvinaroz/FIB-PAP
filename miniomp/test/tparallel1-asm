	.file	"tparallel1.c"
	.text
.Ltext0:
	.section	.rodata.str1.8,"aMS",@progbits,1
	.align 8
.LC0:
	.string	"Thread %d finished the execution of foo\n"
	.text
	.p2align 4
	.type	foo._omp_fn.3, @function
foo._omp_fn.3:
.LVL0:
.LFB17:
	.file 1 "tparallel1.c"
	.loc 1 29 13 view -0
	.cfi_startproc
	.loc 1 30 5 view .LVU1
	.loc 1 29 13 is_stmt 0 view .LVU2
	subq	$8, %rsp
	.cfi_def_cfa_offset 16
	.loc 1 30 5 view .LVU3
	call	omp_get_thread_num
.LVL1:
	.loc 1 30 5 view .LVU4
	movl	$.LC0, %edi
	.loc 1 29 13 view .LVU5
	addq	$8, %rsp
	.cfi_def_cfa_offset 8
	.loc 1 30 5 view .LVU6
	movl	%eax, %esi
	xorl	%eax, %eax
	jmp	printf
.LVL2:
	.cfi_endproc
.LFE17:
	.size	foo._omp_fn.3, .-foo._omp_fn.3
	.p2align 4
	.type	foo._omp_fn.2, @function
foo._omp_fn.2:
.LVL3:
.LFB16:
	.loc 1 21 13 is_stmt 1 view -0
	.cfi_startproc
	.loc 1 23 5 view .LVU8
	.loc 1 24 5 view .LVU9
	.loc 1 24 17 view .LVU10
	.loc 1 25 9 view .LVU11
	.loc 1 24 25 view .LVU12
	.loc 1 24 17 view .LVU13
	.loc 1 25 15 is_stmt 0 view .LVU14
	movl	first(%rip), %eax
	addl	$16, %eax
	.loc 1 21 60 view .LVU15
	lock addl	%eax, second(%rip)
	.loc 1 21 13 view .LVU16
	ret
	.cfi_endproc
.LFE16:
	.size	foo._omp_fn.2, .-foo._omp_fn.2
	.p2align 4
	.type	foo._omp_fn.1, @function
foo._omp_fn.1:
.LVL4:
.LFB15:
	.loc 1 15 13 is_stmt 1 view -0
	.cfi_startproc
	.loc 1 15 13 is_stmt 0 view .LVU18
	movl	(%rdi), %eax
.LVL5:
	.loc 1 17 5 is_stmt 1 view .LVU19
	.loc 1 18 5 view .LVU20
	.loc 1 17 6 is_stmt 0 view .LVU21
	addl	$1, %eax
.LVL6:
	.loc 1 15 51 view .LVU22
	lock addl	%eax, first(%rip)
	.loc 1 15 13 view .LVU23
	ret
	.cfi_endproc
.LFE15:
	.size	foo._omp_fn.1, .-foo._omp_fn.1
	.p2align 4
	.type	foo._omp_fn.0, @function
foo._omp_fn.0:
.LVL7:
.LFB14:
	.loc 1 9 13 is_stmt 1 view -0
	.cfi_startproc
	.loc 1 9 13 is_stmt 0 view .LVU25
	movl	(%rdi), %eax
.LVL8:
	.loc 1 11 5 is_stmt 1 view .LVU26
	.loc 1 12 5 view .LVU27
	.loc 1 11 6 is_stmt 0 view .LVU28
	addl	$1, %eax
.LVL9:
	.loc 1 9 51 view .LVU29
	lock addl	%eax, first(%rip)
	.loc 1 9 13 view .LVU30
	ret
	.cfi_endproc
.LFE14:
	.size	foo._omp_fn.0, .-foo._omp_fn.0
	.p2align 4
	.globl	foo
	.type	foo, @function
foo:
.LFB12:
	.loc 1 7 11 is_stmt 1 view -0
	.cfi_startproc
	.loc 1 8 5 view .LVU32
.LVL10:
	.loc 1 7 11 is_stmt 0 view .LVU33
	subq	$24, %rsp
	.cfi_def_cfa_offset 32
	xorl	%ecx, %ecx
	movl	$2, %edx
	leaq	12(%rsp), %rsi
	movl	$foo._omp_fn.0, %edi
.LBB2:
	.loc 1 9 13 view .LVU34
	movl	$1023, 12(%rsp)
	call	GOMP_parallel
.LVL11:
	leaq	12(%rsp), %rsi
	xorl	%ecx, %ecx
	movl	$1, %edx
	movl	$foo._omp_fn.1, %edi
.LBE2:
.LBB3:
	.loc 1 15 13 view .LVU35
	movl	$1023, 12(%rsp)
	call	GOMP_parallel
.LVL12:
	xorl	%ecx, %ecx
	xorl	%edx, %edx
	xorl	%esi, %esi
	movl	$foo._omp_fn.2, %edi
	call	GOMP_parallel
.LVL13:
.LBE3:
	.loc 1 28 5 is_stmt 1 view .LVU36
	movl	$6, %edi
	call	omp_set_num_threads
.LVL14:
	xorl	%ecx, %ecx
	xorl	%edx, %edx
	xorl	%esi, %esi
	movl	$foo._omp_fn.3, %edi
	call	GOMP_parallel
.LVL15:
	.loc 1 32 5 view .LVU37
	.loc 1 33 1 is_stmt 0 view .LVU38
	movl	$1023, %eax
	addq	$24, %rsp
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE12:
	.size	foo, .-foo
	.section	.rodata.str1.8
	.align 8
.LC1:
	.string	"first = %d, second = %d, x = %d\n"
	.section	.text.startup,"ax",@progbits
	.p2align 4
	.globl	main
	.type	main, @function
main:
.LVL16:
.LFB13:
	.loc 1 35 34 is_stmt 1 view -0
	.cfi_startproc
	.loc 1 36 5 view .LVU40
	.loc 1 35 34 is_stmt 0 view .LVU41
	subq	$8, %rsp
	.cfi_def_cfa_offset 16
	.loc 1 36 5 view .LVU42
	xorl	%eax, %eax
	call	foo
.LVL17:
	.loc 1 36 5 view .LVU43
	movl	second(%rip), %edx
	movl	$.LC1, %edi
	movl	first(%rip), %esi
	movl	%eax, %ecx
	xorl	%eax, %eax
	call	printf
.LVL18:
	.loc 1 37 1 view .LVU44
	xorl	%eax, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE13:
	.size	main, .-main
	.globl	second
	.bss
	.align 4
	.type	second, @object
	.size	second, 4
second:
	.zero	4
	.globl	first
	.align 4
	.type	first, @object
	.size	first, 4
first:
	.zero	4
	.text
.Letext0:
	.file 2 "<built-in>"
	.file 3 "/usr/include/stdio.h"
	.file 4 "/scratch/nas/1/Soft/gcc/10.2.0/lib/gcc/x86_64-linux-gnu/10.2.0/include/omp.h"
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x3b9
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF23
	.byte	0xc
	.long	.LASF24
	.long	.LASF25
	.long	.Ldebug_ranges0+0
	.quad	0
	.long	.Ldebug_line0
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF0
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.long	.LASF1
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.long	.LASF2
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.long	.LASF3
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.long	.LASF4
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.long	.LASF5
	.uleb128 0x3
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.long	.LASF6
	.uleb128 0x4
	.byte	0x8
	.uleb128 0x5
	.long	0x61
	.uleb128 0x6
	.byte	0x8
	.long	0x6e
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.long	.LASF7
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.long	.LASF8
	.uleb128 0x7
	.long	.LASF9
	.byte	0x1
	.byte	0x5
	.byte	0x5
	.long	0x53
	.uleb128 0x9
	.byte	0x3
	.quad	first
	.uleb128 0x7
	.long	.LASF10
	.byte	0x1
	.byte	0x5
	.byte	0xe
	.long	0x53
	.uleb128 0x9
	.byte	0x3
	.quad	second
	.uleb128 0x8
	.string	"foo"
	.byte	0x1
	.byte	0x7
	.byte	0x5
	.long	0x53
	.quad	.LFB12
	.quad	.LFE12-.LFB12
	.uleb128 0x1
	.byte	0x9c
	.long	0x2da
	.uleb128 0x9
	.long	.LASF11
	.quad	.LFB14
	.quad	.LFE14-.LFB14
	.uleb128 0x1
	.byte	0x9c
	.long	0x113
	.uleb128 0xa
	.long	0x30f
	.uleb128 0x1
	.byte	0x55
	.uleb128 0xb
	.string	"x"
	.byte	0x1
	.byte	0x8
	.byte	0xc
	.long	0x53
	.long	.LLST5
	.long	.LVUS5
	.uleb128 0xc
	.long	.LASF9
	.byte	0x1
	.byte	0x5
	.byte	0x5
	.long	0x53
	.long	.LLST6
	.long	.LVUS6
	.byte	0
	.uleb128 0x9
	.long	.LASF12
	.quad	.LFB15
	.quad	.LFE15-.LFB15
	.uleb128 0x1
	.byte	0x9c
	.long	0x15c
	.uleb128 0xa
	.long	0x2f2
	.uleb128 0x1
	.byte	0x55
	.uleb128 0xb
	.string	"x"
	.byte	0x1
	.byte	0x8
	.byte	0xc
	.long	0x53
	.long	.LLST3
	.long	.LVUS3
	.uleb128 0xc
	.long	.LASF9
	.byte	0x1
	.byte	0x5
	.byte	0x5
	.long	0x53
	.long	.LLST4
	.long	.LVUS4
	.byte	0
	.uleb128 0x9
	.long	.LASF13
	.quad	.LFB16
	.quad	.LFE16-.LFB16
	.uleb128 0x1
	.byte	0x9c
	.long	0x1a5
	.uleb128 0xa
	.long	0x63
	.uleb128 0x1
	.byte	0x55
	.uleb128 0xb
	.string	"i"
	.byte	0x1
	.byte	0x8
	.byte	0x9
	.long	0x53
	.long	.LLST1
	.long	.LVUS1
	.uleb128 0xc
	.long	.LASF10
	.byte	0x1
	.byte	0x5
	.byte	0xe
	.long	0x53
	.long	.LLST2
	.long	.LVUS2
	.byte	0
	.uleb128 0x9
	.long	.LASF14
	.quad	.LFB17
	.quad	.LFE17-.LFB17
	.uleb128 0x1
	.byte	0x9c
	.long	0x1f6
	.uleb128 0xd
	.long	0x63
	.long	.LLST0
	.long	.LVUS0
	.uleb128 0xe
	.quad	.LVL1
	.long	0x38d
	.uleb128 0xf
	.quad	.LVL2
	.long	0x398
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x9
	.byte	0x3
	.quad	.LC0
	.byte	0
	.byte	0
	.uleb128 0x11
	.string	"i"
	.byte	0x1
	.byte	0x8
	.byte	0x9
	.long	0x53
	.uleb128 0x12
	.string	"x"
	.byte	0x1
	.byte	0x8
	.byte	0xc
	.long	0x53
	.value	0x3ff
	.uleb128 0x13
	.quad	.LVL11
	.long	0x3a5
	.long	0x23b
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x9
	.byte	0x3
	.quad	foo._omp_fn.0
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x32
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x52
	.uleb128 0x1
	.byte	0x30
	.byte	0
	.uleb128 0x13
	.quad	.LVL12
	.long	0x3a5
	.long	0x26a
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x9
	.byte	0x3
	.quad	foo._omp_fn.1
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x31
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x52
	.uleb128 0x1
	.byte	0x30
	.byte	0
	.uleb128 0x13
	.quad	.LVL13
	.long	0x3a5
	.long	0x298
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x9
	.byte	0x3
	.quad	foo._omp_fn.2
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x1
	.byte	0x30
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x30
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x52
	.uleb128 0x1
	.byte	0x30
	.byte	0
	.uleb128 0x13
	.quad	.LVL14
	.long	0x3b0
	.long	0x2af
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x1
	.byte	0x36
	.byte	0
	.uleb128 0x14
	.quad	.LVL15
	.long	0x3a5
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x9
	.byte	0x3
	.quad	foo._omp_fn.3
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x1
	.byte	0x30
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x30
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x52
	.uleb128 0x1
	.byte	0x30
	.byte	0
	.byte	0
	.uleb128 0x15
	.byte	0x4
	.long	0x2ec
	.uleb128 0x16
	.string	"x"
	.byte	0x1
	.byte	0x8
	.byte	0xc
	.long	0x53
	.byte	0
	.byte	0
	.uleb128 0x17
	.byte	0x8
	.long	0x2da
	.uleb128 0x18
	.long	0x2ec
	.uleb128 0x15
	.byte	0x4
	.long	0x309
	.uleb128 0x16
	.string	"x"
	.byte	0x1
	.byte	0x8
	.byte	0xc
	.long	0x53
	.byte	0
	.byte	0
	.uleb128 0x17
	.byte	0x8
	.long	0x2f7
	.uleb128 0x18
	.long	0x309
	.uleb128 0x19
	.long	.LASF26
	.byte	0x1
	.byte	0x23
	.byte	0x5
	.long	0x53
	.quad	.LFB13
	.quad	.LFE13-.LFB13
	.uleb128 0x1
	.byte	0x9c
	.long	0x387
	.uleb128 0x1a
	.long	.LASF15
	.byte	0x1
	.byte	0x23
	.byte	0xe
	.long	0x53
	.long	.LLST7
	.long	.LVUS7
	.uleb128 0x1a
	.long	.LASF16
	.byte	0x1
	.byte	0x23
	.byte	0x1a
	.long	0x387
	.long	.LLST8
	.long	.LVUS8
	.uleb128 0xe
	.quad	.LVL17
	.long	0xa8
	.uleb128 0x14
	.quad	.LVL18
	.long	0x398
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x9
	.byte	0x3
	.quad	.LC1
	.byte	0
	.byte	0
	.uleb128 0x6
	.byte	0x8
	.long	0x68
	.uleb128 0x1b
	.long	.LASF17
	.long	.LASF19
	.byte	0x2
	.byte	0
	.uleb128 0x1c
	.long	.LASF21
	.long	.LASF21
	.byte	0x3
	.value	0x13e
	.byte	0xc
	.uleb128 0x1b
	.long	.LASF18
	.long	.LASF20
	.byte	0x2
	.byte	0
	.uleb128 0x1d
	.long	.LASF22
	.long	.LASF22
	.byte	0x4
	.byte	0x64
	.byte	0xd
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x17
	.uleb128 0x2137
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x17
	.uleb128 0x2137
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x17
	.uleb128 0x2137
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x4109
	.byte	0
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x4109
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x2115
	.uleb128 0x19
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x410a
	.byte	0
	.uleb128 0x2
	.uleb128 0x18
	.uleb128 0x2111
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1c
	.uleb128 0x5
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x4109
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x4109
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x10
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x37
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x17
	.uleb128 0x2137
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x6e
	.uleb128 0xe
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x6e
	.uleb128 0xe
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x6e
	.uleb128 0xe
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
.LVUS5:
	.uleb128 .LVU26
	.uleb128 .LVU27
	.uleb128 .LVU27
	.uleb128 .LVU29
	.uleb128 .LVU29
	.uleb128 0
.LLST5:
	.quad	.LVL8
	.quad	.LVL8
	.value	0x1
	.byte	0x50
	.quad	.LVL8
	.quad	.LVL9
	.value	0x3
	.byte	0x70
	.sleb128 1
	.byte	0x9f
	.quad	.LVL9
	.quad	.LFE14
	.value	0x1
	.byte	0x50
	.quad	0
	.quad	0
.LVUS6:
	.uleb128 .LVU25
	.uleb128 .LVU28
	.uleb128 .LVU28
	.uleb128 .LVU29
	.uleb128 .LVU29
	.uleb128 0
.LLST6:
	.quad	.LVL7
	.quad	.LVL8
	.value	0x2
	.byte	0x30
	.byte	0x9f
	.quad	.LVL8
	.quad	.LVL9
	.value	0x3
	.byte	0x70
	.sleb128 1
	.byte	0x9f
	.quad	.LVL9
	.quad	.LFE14
	.value	0x1
	.byte	0x50
	.quad	0
	.quad	0
.LVUS3:
	.uleb128 .LVU19
	.uleb128 .LVU20
	.uleb128 .LVU20
	.uleb128 .LVU22
	.uleb128 .LVU22
	.uleb128 0
.LLST3:
	.quad	.LVL5
	.quad	.LVL5
	.value	0x1
	.byte	0x50
	.quad	.LVL5
	.quad	.LVL6
	.value	0x3
	.byte	0x70
	.sleb128 1
	.byte	0x9f
	.quad	.LVL6
	.quad	.LFE15
	.value	0x1
	.byte	0x50
	.quad	0
	.quad	0
.LVUS4:
	.uleb128 .LVU18
	.uleb128 .LVU21
	.uleb128 .LVU21
	.uleb128 .LVU22
	.uleb128 .LVU22
	.uleb128 0
.LLST4:
	.quad	.LVL4
	.quad	.LVL5
	.value	0x2
	.byte	0x30
	.byte	0x9f
	.quad	.LVL5
	.quad	.LVL6
	.value	0x3
	.byte	0x70
	.sleb128 1
	.byte	0x9f
	.quad	.LVL6
	.quad	.LFE15
	.value	0x1
	.byte	0x50
	.quad	0
	.quad	0
.LVUS1:
	.uleb128 .LVU10
	.uleb128 .LVU11
.LLST1:
	.quad	.LVL3
	.quad	.LVL3
	.value	0x2
	.byte	0x30
	.byte	0x9f
	.quad	0
	.quad	0
.LVUS2:
	.uleb128 .LVU8
	.uleb128 .LVU9
	.uleb128 .LVU9
	.uleb128 .LVU11
.LLST2:
	.quad	.LVL3
	.quad	.LVL3
	.value	0x2
	.byte	0x30
	.byte	0x9f
	.quad	.LVL3
	.quad	.LVL3
	.value	0x9
	.byte	0x3
	.quad	first
	.quad	0
	.quad	0
.LVUS0:
	.uleb128 0
	.uleb128 .LVU4
	.uleb128 .LVU4
	.uleb128 0
.LLST0:
	.quad	.LVL0
	.quad	.LVL1-1
	.value	0x1
	.byte	0x55
	.quad	.LVL1-1
	.quad	.LFE17
	.value	0x4
	.byte	0xf3
	.uleb128 0x1
	.byte	0x55
	.byte	0x9f
	.quad	0
	.quad	0
.LVUS7:
	.uleb128 0
	.uleb128 .LVU43
	.uleb128 .LVU43
	.uleb128 0
.LLST7:
	.quad	.LVL16
	.quad	.LVL17-1
	.value	0x1
	.byte	0x55
	.quad	.LVL17-1
	.quad	.LFE13
	.value	0x4
	.byte	0xf3
	.uleb128 0x1
	.byte	0x55
	.byte	0x9f
	.quad	0
	.quad	0
.LVUS8:
	.uleb128 0
	.uleb128 .LVU43
	.uleb128 .LVU43
	.uleb128 0
.LLST8:
	.quad	.LVL16
	.quad	.LVL17-1
	.value	0x1
	.byte	0x54
	.quad	.LVL17-1
	.quad	.LFE13
	.value	0x4
	.byte	0xf3
	.uleb128 0x1
	.byte	0x54
	.byte	0x9f
	.quad	0
	.quad	0
	.section	.debug_aranges,"",@progbits
	.long	0x3c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	.LFB13
	.quad	.LFE13-.LFB13
	.quad	0
	.quad	0
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.Ltext0
	.quad	.Letext0
	.quad	.LFB13
	.quad	.LFE13
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF22:
	.string	"omp_set_num_threads"
.LASF20:
	.string	"__builtin_GOMP_parallel"
.LASF9:
	.string	"first"
.LASF18:
	.string	"GOMP_parallel"
.LASF23:
	.ascii	"GNU C99 10.2.0 -march=westmere -mmmx -mno-3dnow -msse -msse2"
	.ascii	" -msse3 -mssse3 -mno-sse4a -mcx16 -msahf -mno-movbe -mno-aes"
	.ascii	" -mno-sha -mno-pclmul -mpopcnt -mno-abm -mno-lwp -mno-fma -m"
	.ascii	"no-fma4 -mno-xop -mno-bmi -mno-sgx -mno-bmi2 -mno-pconfig -m"
	.ascii	"no-wbnoinvd -mno-tbm -mno-avx -mno-avx2 -msse4.2 -msse4.1 -m"
	.ascii	"no-lzcnt -mno-rtm -mno-hle -mno-rdrnd -mno-f16c -mno-fsgsbas"
	.ascii	"e -mno-rdseed -mno-prfchw -mno-adx -mfxsr -mno-xsave -mno-xs"
	.ascii	"aveopt -mno-avx512f -mno-avx512er -mno-avx512cd -mno-avx512p"
	.ascii	"f -mno-prefetchwt1 -mno-clflushopt -mno-xsavec -mno-xsaves -"
	.ascii	"mno-avx512dq -mno-avx512bw -mno-avx512vl -mno-avx512ifma -mn"
	.ascii	"o-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw -mno-clwb -"
	.ascii	"mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni -mno-sh"
	.ascii	"stk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulq"
	.ascii	"dq -mno-avx512bitalg -mno-avx"
	.string	"512vpopcntdq -mno-movdiri -mno-movdir64b -mno-waitpkg -mno-cldemote -mno-ptwrite -mno-avx512bf16 -mno-enqcmd -mno-avx512vp2intersect --param=l1-cache-size=32 --param=l1-cache-line-size=64 --param=l2-cache-size=12288 -mtune=westmere -g -O3 -std=c99 -fopenmp"
.LASF1:
	.string	"unsigned char"
.LASF0:
	.string	"long unsigned int"
.LASF2:
	.string	"short unsigned int"
.LASF10:
	.string	"second"
.LASF25:
	.string	"/scratch/nas/1/pap0022/miniomp/test"
.LASF5:
	.string	"short int"
.LASF26:
	.string	"main"
.LASF3:
	.string	"unsigned int"
.LASF17:
	.string	"omp_get_thread_num"
.LASF7:
	.string	"char"
.LASF19:
	.string	"__builtin_omp_get_thread_num"
.LASF24:
	.string	"tparallel1.c"
.LASF8:
	.string	"long long int"
.LASF21:
	.string	"printf"
.LASF11:
	.string	"foo._omp_fn.0"
.LASF12:
	.string	"foo._omp_fn.1"
.LASF13:
	.string	"foo._omp_fn.2"
.LASF14:
	.string	"foo._omp_fn.3"
.LASF16:
	.string	"argv"
.LASF6:
	.string	"long int"
.LASF4:
	.string	"signed char"
.LASF15:
	.string	"argc"
	.ident	"GCC: (GNU) 10.2.0"
	.section	.note.GNU-stack,"",@progbits
