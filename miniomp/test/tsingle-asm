	.file	"tsingle.c"
	.text
.Ltext0:
	.section	.rodata.str1.8,"aMS",@progbits,1
	.align 8
.LC0:
	.string	"Thread %d finishing the execution of the parallel region\n"
	.align 8
.LC1:
	.string	"Hello! I'm thread %d in second loop - iteration %d\n"
	.align 8
.LC2:
	.string	"Hello! I'm thread %d in first loop - iteration %d\n"
	.text
	.p2align 4
	.type	foo._omp_fn.0, @function
foo._omp_fn.0:
.LVL0:
.LFB14:
	.file 1 "tsingle.c"
	.loc 1 8 13 view -0
	.cfi_startproc
	.loc 1 10 9 view .LVU1
.LBB4:
	.loc 1 10 14 view .LVU2
	.loc 1 10 25 view .LVU3
.LBE4:
	.loc 1 8 13 is_stmt 0 view .LVU4
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset 3, -24
.LBB7:
	.loc 1 10 18 view .LVU5
	xorl	%ebx, %ebx
.LBE7:
	.loc 1 8 13 view .LVU6
	subq	$8, %rsp
	.cfi_def_cfa_offset 32
	.loc 1 27 9 view .LVU7
	call	omp_get_thread_num
.LVL1:
	.loc 1 27 9 view .LVU8
	movl	%eax, %ebp
	jmp	.L2
.LVL2:
	.p2align 4,,10
	.p2align 3
.L20:
	.loc 1 27 9 view .LVU9
	call	GOMP_barrier
.LVL3:
.LBB8:
	.loc 1 10 33 is_stmt 1 view .LVU10
	.loc 1 10 34 is_stmt 0 view .LVU11
	addl	$1, %ebx
.LVL4:
	.loc 1 10 25 is_stmt 1 view .LVU12
	.loc 1 10 9 is_stmt 0 view .LVU13
	cmpl	$10, %ebx
	je	.L19
.LVL5:
.L2:
.LBB5:
	.loc 1 10 9 view .LVU14
	call	GOMP_single_start
.LVL6:
	testb	%al, %al
	je	.L20
	.loc 1 13 17 is_stmt 1 view .LVU15
	movl	%ebx, %edx
	movl	%ebp, %esi
	movl	$.LC2, %edi
	xorl	%eax, %eax
.LBE5:
	.loc 1 10 34 is_stmt 0 view .LVU16
	addl	$1, %ebx
.LVL7:
.LBB6:
	.loc 1 13 17 view .LVU17
	call	printf
.LVL8:
	.loc 1 15 17 is_stmt 1 view .LVU18
	movl	$1, %edi
	call	sleep
.LVL9:
	call	GOMP_barrier
.LVL10:
.LBE6:
	.loc 1 10 33 view .LVU19
	.loc 1 10 25 view .LVU20
	.loc 1 10 9 is_stmt 0 view .LVU21
	cmpl	$10, %ebx
	jne	.L2
.L19:
	.loc 1 10 9 view .LVU22
.LBE8:
.LBB9:
	.loc 1 19 18 view .LVU23
	xorl	%ebx, %ebx
.LVL11:
	.loc 1 19 18 view .LVU24
	jmp	.L5
.LVL12:
	.p2align 4,,10
	.p2align 3
.L22:
	.loc 1 19 18 view .LVU25
	call	GOMP_barrier
.LVL13:
	.loc 1 19 33 is_stmt 1 view .LVU26
	.loc 1 19 34 is_stmt 0 view .LVU27
	addl	$1, %ebx
.LVL14:
	.loc 1 19 25 is_stmt 1 view .LVU28
	.loc 1 19 9 is_stmt 0 view .LVU29
	cmpl	$10, %ebx
	je	.L21
.LVL15:
.L5:
.LBB10:
	.loc 1 19 9 view .LVU30
	call	GOMP_single_start
.LVL16:
	testb	%al, %al
	je	.L22
	.loc 1 22 17 is_stmt 1 view .LVU31
	movl	%ebx, %edx
	movl	%ebp, %esi
	movl	$.LC1, %edi
	xorl	%eax, %eax
.LBE10:
	.loc 1 19 34 is_stmt 0 view .LVU32
	addl	$1, %ebx
.LVL17:
.LBB11:
	.loc 1 22 17 view .LVU33
	call	printf
.LVL18:
	.loc 1 24 17 is_stmt 1 view .LVU34
	movl	$1, %edi
	call	sleep
.LVL19:
	call	GOMP_barrier
.LVL20:
.LBE11:
	.loc 1 19 33 view .LVU35
	.loc 1 19 25 view .LVU36
	.loc 1 19 9 is_stmt 0 view .LVU37
	cmpl	$10, %ebx
	jne	.L5
.L21:
	.loc 1 19 9 view .LVU38
.LBE9:
	.loc 1 27 9 is_stmt 1 view .LVU39
	.loc 1 8 13 is_stmt 0 view .LVU40
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	.loc 1 27 9 view .LVU41
	movl	%ebp, %esi
	movl	$.LC0, %edi
	.loc 1 8 13 view .LVU42
	popq	%rbx
	.cfi_def_cfa_offset 16
.LVL21:
	.loc 1 27 9 view .LVU43
	xorl	%eax, %eax
	.loc 1 8 13 view .LVU44
	popq	%rbp
	.cfi_def_cfa_offset 8
	.loc 1 27 9 view .LVU45
	jmp	printf
.LVL22:
	.cfi_endproc
.LFE14:
	.size	foo._omp_fn.0, .-foo._omp_fn.0
	.p2align 4
	.globl	foo
	.type	foo, @function
foo:
.LFB12:
	.loc 1 7 11 is_stmt 1 view -0
	.cfi_startproc
	xorl	%ecx, %ecx
	xorl	%edx, %edx
	xorl	%esi, %esi
	movl	$foo._omp_fn.0, %edi
	jmp	GOMP_parallel
.LVL23:
	.cfi_endproc
.LFE12:
	.size	foo, .-foo
	.section	.rodata.str1.8
	.align 8
.LC3:
	.string	"Back in main ... finishing the program"
	.section	.text.startup,"ax",@progbits
	.p2align 4
	.globl	main
	.type	main, @function
main:
.LVL24:
.LFB13:
	.loc 1 31 34 view -0
	.cfi_startproc
	.loc 1 32 5 view .LVU48
.LBB12:
.LBI12:
	.loc 1 7 6 view .LVU49
.LBE12:
	.loc 1 31 34 is_stmt 0 view .LVU50
	subq	$8, %rsp
	.cfi_def_cfa_offset 16
	xorl	%ecx, %ecx
	xorl	%edx, %edx
	xorl	%esi, %esi
.LVL25:
	.loc 1 31 34 view .LVU51
	movl	$foo._omp_fn.0, %edi
.LVL26:
	.loc 1 31 34 view .LVU52
	call	GOMP_parallel
.LVL27:
	.loc 1 33 5 is_stmt 1 view .LVU53
	movl	$.LC3, %edi
	call	puts
.LVL28:
	.loc 1 34 1 is_stmt 0 view .LVU54
	xorl	%eax, %eax
	addq	$8, %rsp
	.cfi_def_cfa_offset 8
	ret
	.cfi_endproc
.LFE13:
	.size	main, .-main
	.text
.Letext0:
	.file 2 "/usr/include/stdio.h"
	.file 3 "/usr/include/unistd.h"
	.file 4 "<built-in>"
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.long	0x334
	.value	0x4
	.long	.Ldebug_abbrev0
	.byte	0x8
	.uleb128 0x1
	.long	.LASF23
	.byte	0xc
	.long	.LASF24
	.long	.LASF25
	.long	.Ldebug_ranges0+0x40
	.quad	0
	.long	.Ldebug_line0
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.long	.LASF0
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.long	.LASF1
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.long	.LASF2
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.long	.LASF3
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.long	.LASF4
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.long	.LASF5
	.uleb128 0x3
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.long	.LASF6
	.uleb128 0x4
	.byte	0x8
	.uleb128 0x5
	.long	0x61
	.uleb128 0x6
	.byte	0x8
	.long	0x6e
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.long	.LASF7
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.long	.LASF8
	.uleb128 0x6
	.byte	0x8
	.long	0x68
	.uleb128 0x7
	.string	"foo"
	.byte	0x1
	.byte	0x7
	.byte	0x6
	.byte	0x1
	.long	0x1eb
	.uleb128 0x8
	.long	.LASF26
	.quad	.LFB14
	.quad	.LFE14-.LFB14
	.uleb128 0x1
	.byte	0x9c
	.uleb128 0x9
	.long	0x63
	.long	.LLST0
	.long	.LVUS0
	.uleb128 0xa
	.long	.Ldebug_ranges0+0
	.long	0x11a
	.uleb128 0xb
	.string	"i"
	.byte	0x1
	.byte	0xa
	.byte	0x12
	.long	0x53
	.long	.LLST1
	.long	.LVUS1
	.uleb128 0xc
	.quad	.LVL6
	.long	0x2e6
	.uleb128 0xd
	.quad	.LVL8
	.long	0x2f1
	.long	0x106
	.uleb128 0xe
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x9
	.byte	0x3
	.quad	.LC2
	.uleb128 0xe
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x2
	.byte	0x76
	.sleb128 0
	.uleb128 0xe
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x2
	.byte	0x73
	.sleb128 -1
	.byte	0
	.uleb128 0xf
	.quad	.LVL9
	.long	0x2fe
	.uleb128 0xe
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x1
	.byte	0x31
	.byte	0
	.byte	0
	.uleb128 0x10
	.quad	.LBB9
	.quad	.LBE9-.LBB9
	.long	0x18d
	.uleb128 0xb
	.string	"i"
	.byte	0x1
	.byte	0x13
	.byte	0x12
	.long	0x53
	.long	.LLST2
	.long	.LVUS2
	.uleb128 0xc
	.quad	.LVL16
	.long	0x2e6
	.uleb128 0xd
	.quad	.LVL18
	.long	0x2f1
	.long	0x179
	.uleb128 0xe
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x9
	.byte	0x3
	.quad	.LC1
	.uleb128 0xe
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x2
	.byte	0x76
	.sleb128 0
	.uleb128 0xe
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x2
	.byte	0x73
	.sleb128 -1
	.byte	0
	.uleb128 0xf
	.quad	.LVL19
	.long	0x2fe
	.uleb128 0xe
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x1
	.byte	0x31
	.byte	0
	.byte	0
	.uleb128 0xc
	.quad	.LVL1
	.long	0x30b
	.uleb128 0xc
	.quad	.LVL3
	.long	0x316
	.uleb128 0xc
	.quad	.LVL10
	.long	0x316
	.uleb128 0xc
	.quad	.LVL13
	.long	0x316
	.uleb128 0xc
	.quad	.LVL20
	.long	0x316
	.uleb128 0x11
	.quad	.LVL22
	.long	0x2f1
	.uleb128 0xe
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x9
	.byte	0x3
	.quad	.LC0
	.byte	0
	.byte	0
	.byte	0
	.uleb128 0x12
	.long	.LASF27
	.byte	0x1
	.byte	0x1f
	.byte	0x5
	.long	0x53
	.quad	.LFB13
	.quad	.LFE13-.LFB13
	.uleb128 0x1
	.byte	0x9c
	.long	0x2a0
	.uleb128 0x13
	.long	.LASF9
	.byte	0x1
	.byte	0x1f
	.byte	0xe
	.long	0x53
	.long	.LLST3
	.long	.LVUS3
	.uleb128 0x13
	.long	.LASF10
	.byte	0x1
	.byte	0x1f
	.byte	0x1a
	.long	0x7c
	.long	.LLST4
	.long	.LVUS4
	.uleb128 0x14
	.long	0x82
	.quad	.LBI12
	.byte	.LVU49
	.quad	.LBB12
	.quad	.LBE12-.LBB12
	.byte	0x1
	.byte	0x20
	.byte	0x5
	.uleb128 0xd
	.quad	.LVL27
	.long	0x321
	.long	0x284
	.uleb128 0xe
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x9
	.byte	0x3
	.quad	foo._omp_fn.0
	.uleb128 0xe
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x1
	.byte	0x30
	.uleb128 0xe
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x30
	.uleb128 0xe
	.uleb128 0x1
	.byte	0x52
	.uleb128 0x1
	.byte	0x30
	.byte	0
	.uleb128 0xf
	.quad	.LVL28
	.long	0x32c
	.uleb128 0xe
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x9
	.byte	0x3
	.quad	.LC3
	.byte	0
	.byte	0
	.uleb128 0x15
	.long	0x82
	.quad	.LFB12
	.quad	.LFE12-.LFB12
	.uleb128 0x1
	.byte	0x9c
	.long	0x2e6
	.uleb128 0x11
	.quad	.LVL23
	.long	0x321
	.uleb128 0xe
	.uleb128 0x1
	.byte	0x55
	.uleb128 0x9
	.byte	0x3
	.quad	foo._omp_fn.0
	.uleb128 0xe
	.uleb128 0x1
	.byte	0x54
	.uleb128 0x1
	.byte	0x30
	.uleb128 0xe
	.uleb128 0x1
	.byte	0x51
	.uleb128 0x1
	.byte	0x30
	.uleb128 0xe
	.uleb128 0x1
	.byte	0x52
	.uleb128 0x1
	.byte	0x30
	.byte	0
	.byte	0
	.uleb128 0x16
	.long	.LASF13
	.long	.LASF15
	.byte	0x4
	.byte	0
	.uleb128 0x17
	.long	.LASF11
	.long	.LASF11
	.byte	0x2
	.value	0x13e
	.byte	0xc
	.uleb128 0x17
	.long	.LASF12
	.long	.LASF12
	.byte	0x3
	.value	0x1bf
	.byte	0x15
	.uleb128 0x16
	.long	.LASF14
	.long	.LASF16
	.byte	0x4
	.byte	0
	.uleb128 0x16
	.long	.LASF17
	.long	.LASF18
	.byte	0x4
	.byte	0
	.uleb128 0x16
	.long	.LASF19
	.long	.LASF20
	.byte	0x4
	.byte	0
	.uleb128 0x16
	.long	.LASF21
	.long	.LASF22
	.byte	0x4
	.byte	0
	.byte	0
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0xe
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1b
	.uleb128 0xe
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0xe
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x20
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0x19
	.uleb128 0x2
	.uleb128 0x17
	.uleb128 0x2137
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x55
	.uleb128 0x17
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x17
	.uleb128 0x2137
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x4109
	.byte	0
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x4109
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x410a
	.byte	0
	.uleb128 0x2
	.uleb128 0x18
	.uleb128 0x2111
	.uleb128 0x18
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x4109
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0x4109
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x2115
	.uleb128 0x19
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0x19
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x39
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x17
	.uleb128 0x2137
	.uleb128 0x17
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x1d
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x52
	.uleb128 0x1
	.uleb128 0x2138
	.uleb128 0xb
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x58
	.uleb128 0xb
	.uleb128 0x59
	.uleb128 0xb
	.uleb128 0x57
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x7
	.uleb128 0x40
	.uleb128 0x18
	.uleb128 0x2117
	.uleb128 0x19
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x6e
	.uleb128 0xe
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x2e
	.byte	0
	.uleb128 0x3f
	.uleb128 0x19
	.uleb128 0x3c
	.uleb128 0x19
	.uleb128 0x6e
	.uleb128 0xe
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x39
	.uleb128 0xb
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
.LVUS0:
	.uleb128 0
	.uleb128 .LVU8
	.uleb128 .LVU8
	.uleb128 0
.LLST0:
	.quad	.LVL0
	.quad	.LVL1-1
	.value	0x1
	.byte	0x55
	.quad	.LVL1-1
	.quad	.LFE14
	.value	0x4
	.byte	0xf3
	.uleb128 0x1
	.byte	0x55
	.byte	0x9f
	.quad	0
	.quad	0
.LVUS1:
	.uleb128 .LVU3
	.uleb128 .LVU9
	.uleb128 .LVU9
	.uleb128 .LVU17
	.uleb128 .LVU17
	.uleb128 .LVU18
	.uleb128 .LVU18
	.uleb128 .LVU20
	.uleb128 .LVU20
	.uleb128 .LVU24
.LLST1:
	.quad	.LVL0
	.quad	.LVL2
	.value	0x2
	.byte	0x30
	.byte	0x9f
	.quad	.LVL2
	.quad	.LVL7
	.value	0x1
	.byte	0x53
	.quad	.LVL7
	.quad	.LVL8-1
	.value	0x1
	.byte	0x51
	.quad	.LVL8-1
	.quad	.LVL10
	.value	0x3
	.byte	0x73
	.sleb128 -1
	.byte	0x9f
	.quad	.LVL10
	.quad	.LVL11
	.value	0x1
	.byte	0x53
	.quad	0
	.quad	0
.LVUS2:
	.uleb128 .LVU25
	.uleb128 .LVU33
	.uleb128 .LVU33
	.uleb128 .LVU34
	.uleb128 .LVU34
	.uleb128 .LVU36
	.uleb128 .LVU36
	.uleb128 .LVU43
.LLST2:
	.quad	.LVL12
	.quad	.LVL17
	.value	0x1
	.byte	0x53
	.quad	.LVL17
	.quad	.LVL18-1
	.value	0x1
	.byte	0x51
	.quad	.LVL18-1
	.quad	.LVL20
	.value	0x3
	.byte	0x73
	.sleb128 -1
	.byte	0x9f
	.quad	.LVL20
	.quad	.LVL21
	.value	0x1
	.byte	0x53
	.quad	0
	.quad	0
.LVUS3:
	.uleb128 0
	.uleb128 .LVU52
	.uleb128 .LVU52
	.uleb128 0
.LLST3:
	.quad	.LVL24
	.quad	.LVL26
	.value	0x1
	.byte	0x55
	.quad	.LVL26
	.quad	.LFE13
	.value	0x4
	.byte	0xf3
	.uleb128 0x1
	.byte	0x55
	.byte	0x9f
	.quad	0
	.quad	0
.LVUS4:
	.uleb128 0
	.uleb128 .LVU51
	.uleb128 .LVU51
	.uleb128 0
.LLST4:
	.quad	.LVL24
	.quad	.LVL25
	.value	0x1
	.byte	0x54
	.quad	.LVL25
	.quad	.LFE13
	.value	0x4
	.byte	0xf3
	.uleb128 0x1
	.byte	0x54
	.byte	0x9f
	.quad	0
	.quad	0
	.section	.debug_aranges,"",@progbits
	.long	0x3c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x8
	.byte	0
	.value	0
	.value	0
	.quad	.Ltext0
	.quad	.Letext0-.Ltext0
	.quad	.LFB13
	.quad	.LFE13-.LFB13
	.quad	0
	.quad	0
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.LBB4
	.quad	.LBE4
	.quad	.LBB7
	.quad	.LBE7
	.quad	.LBB8
	.quad	.LBE8
	.quad	0
	.quad	0
	.quad	.Ltext0
	.quad	.Letext0
	.quad	.LFB13
	.quad	.LFE13
	.quad	0
	.quad	0
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.section	.debug_str,"MS",@progbits,1
.LASF20:
	.string	"__builtin_GOMP_parallel"
.LASF24:
	.string	"tsingle.c"
.LASF10:
	.string	"argv"
.LASF2:
	.string	"short unsigned int"
.LASF19:
	.string	"GOMP_parallel"
.LASF23:
	.ascii	"GNU C99 10.2.0 -march=westmere -mmmx -mno-3dnow -msse -msse2"
	.ascii	" -msse3 -mssse3 -mno-sse4a -mcx16 -msahf -mno-movbe -mno-aes"
	.ascii	" -mno-sha -mno-pclmul -mpopcnt -mno-abm -mno-lwp -mno-fma -m"
	.ascii	"no-fma4 -mno-xop -mno-bmi -mno-sgx -mno-bmi2 -mno-pconfig -m"
	.ascii	"no-wbnoinvd -mno-tbm -mno-avx -mno-avx2 -msse4.2 -msse4.1 -m"
	.ascii	"no-lzcnt -mno-rtm -mno-hle -mno-rdrnd -mno-f16c -mno-fsgsbas"
	.ascii	"e -mno-rdseed -mno-prfchw -mno-adx -mfxsr -mno-xsave -mno-xs"
	.ascii	"aveopt -mno-avx512f -mno-avx512er -mno-avx512cd -mno-avx512p"
	.ascii	"f -mno-prefetchwt1 -mno-clflushopt -mno-xsavec -mno-xsaves -"
	.ascii	"mno-avx512dq -mno-avx512bw -mno-avx512vl -mno-avx512ifma -mn"
	.ascii	"o-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw -mno-clwb -"
	.ascii	"mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni -mno-sh"
	.ascii	"stk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulq"
	.ascii	"dq -mno-avx512bitalg -mno-avx"
	.string	"512vpopcntdq -mno-movdiri -mno-movdir64b -mno-waitpkg -mno-cldemote -mno-ptwrite -mno-avx512bf16 -mno-enqcmd -mno-avx512vp2intersect --param=l1-cache-size=32 --param=l1-cache-line-size=64 --param=l2-cache-size=12288 -mtune=westmere -g -O3 -std=c99 -fopenmp"
.LASF22:
	.string	"__builtin_puts"
.LASF1:
	.string	"unsigned char"
.LASF0:
	.string	"long unsigned int"
.LASF18:
	.string	"__builtin_GOMP_barrier"
.LASF25:
	.string	"/scratch/nas/1/pap0022/miniomp/test"
.LASF13:
	.string	"GOMP_single_start"
.LASF27:
	.string	"main"
.LASF17:
	.string	"GOMP_barrier"
.LASF3:
	.string	"unsigned int"
.LASF14:
	.string	"omp_get_thread_num"
.LASF7:
	.string	"char"
.LASF16:
	.string	"__builtin_omp_get_thread_num"
.LASF8:
	.string	"long long int"
.LASF15:
	.string	"__builtin_GOMP_single_start"
.LASF11:
	.string	"printf"
.LASF26:
	.string	"foo._omp_fn.0"
.LASF5:
	.string	"short int"
.LASF9:
	.string	"argc"
.LASF6:
	.string	"long int"
.LASF21:
	.string	"puts"
.LASF4:
	.string	"signed char"
.LASF12:
	.string	"sleep"
	.ident	"GCC: (GNU) 10.2.0"
	.section	.note.GNU-stack,"",@progbits
